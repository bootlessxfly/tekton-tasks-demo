apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
#  serviceAccountName: build-bot
  resources:
    - name: api-repo
      type: git
#    - name: api-image
#      type: image

  tasks:
    - name: unit-test
      taskRef:
        name: maven
      resources:
        inputs:
          - name: source
            resource: api-repo
      params: 
      - name: GOALS
        value: ["install"]
      - name: MAVEN_SETTINGS_CONFIGMAP
        value: custom-maven-settings
        
    - name: sonarqube-analysis-test
      taskRef:
        name: maven
      resources:
        inputs:
          - name: source
            resource: api-repo
      params: 
      - name: GOALS
        value:
          - install
          - sonar:sonar
          - -DskipTests=true
          - -Dsonar.host.url=http://sonarqube-task-demo-sonarqube.apps-crc.testing
          - -Dsonar.userHome=/tmp/sonar
      - name: MAVEN_SETTINGS_CONFIGMAP
        value: custom-maven-settings
        
    - name: deploy-app-nexus
      taskRef:
        name: maven
      runAfter:
        - unit-test
        - sonarqube-analysis-test
      resources:
        inputs:
          - name: source
            resource: api-repo
      params: 
      - name: GOALS
        value:
          - deploy
          - -DskipTests=true
          - -DaltDeploymentRepository=nexus::default::http://nexus-task-demo-nexus.apps-crc.testing/repository/maven-releases/
          - -DaltSnapshotDeploymentRepository=nexus::default::http://nexus-task-demo-nexus.apps-crc.testing/repository/maven-snapshots/
      - name: MAVEN_SETTINGS_CONFIGMAP
        value: custom-maven-settings
        
        


#    - name: build-api
#      taskRef:
#        name: buildah
#        kind: ClusterTask
#      resources:
#        inputs:
#          - name: source
#            resource: api-repo
#        outputs:
#          - name: image
#            resource: api-image
#      params:
#        - name: TLSVERIFY
#          value: "false"
#
#    - name: apply-api-manifests
#      taskRef:
#        name: apply-manifests
#      resources:
#        inputs:
#          - name: source
#            resource: api-repo
#      runAfter:
#        - build-api
#
#    - name: update-api-image
#      taskRef:
#        name: update-deployment
#      resources:
#        inputs:
#          - name: image
#            resource: api-image
#      params:
#        - name: deployment
#          value: "tekton-tasks-demo"
#      runAfter:
#        - apply-api-manifests
